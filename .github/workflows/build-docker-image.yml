name: CI Build Docker image and push

run-name: ${{ github.actor }} is launching the Build the Docker image and push it ðŸš€

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

jobs:
  build-sample-app:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: self-hosted
    steps:
      - name: Test
        run: |
          echo "${{ github.ref }}"
          echo "${{ github.ref_type }}"
          echo "${{ github.ref_name }}"
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Set up PHP and composer
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: "8.2"
  #         tools: composer
  #     - name: Make envfile
  #       uses: SpicyPizza/create-envfile@v2.0
  #       with:
  #         envkey_APP_DEBUG: ${{ secrets.APP_DEBUG }}
  #         envkey_APP_ENV: ${{ secrets.APP_ENV }}
  #         envkey_APP_KEY: ${{ secrets.APP_KEY }}
  #         envkey_MYSQL_ATTR_SSL_CA: ${{ secrets.MYSQL_ATTR_SSL_CA }}
  #         envkey_DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
  #         envkey_DB_HOST: ${{ vars.AZURE_MYSQL_DB_HOST }}
  #         envkey_DB_PORT: ${{ secrets.DB_PORT }}
  #         envkey_DB_DATABASE: ${{ secrets.DB_DATABASE }}
  #         envkey_DB_USERNAME: ${{ vars.AZURE_DB_LOGIN }}
  #         envkey_DB_PASSWORD: ${{ vars.AZURE_DB_PASSWORD }}
  #         directory: sample-app/
  #         file_name: .env
  #         fail_on_empty: false
  #         sort_keys: false
  #     - name: Update and install dependencies
  #       run: |
  #         cd sample-app/
  #         composer update --optimize-autoloader
  #         composer install --no-interaction --optimize-autoloader
  #     - name: Compresse the app
  #       run: |
  #         tar -czf app-builded.tar.gz sample-app/
  #     - name: Upload artefact of the app
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: app-builded.tar.gz
  #         path: app-builded.tar.gz
  # build-image-docker:
  #   if: endsWith(github.ref, 'main')
  #   needs: build-sample-app
  #   runs-on: self-hosted
  #   steps:
  #     - name: Download the artefact of the app
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: app-builded.tar.gz
  #     - name: Unpack the artifact
  #       run: |
  #         rm -rf sample-app/
  #         mkdir sample-app/
  #         tar xzf app-builded.tar.gz
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ vars.AZURE_REGISTRY }}
  #         username: ${{ vars.AZURE_REGISTRY_NAME }}
  #         password: ${{ vars.AZURE_REGISTRY_PASSWORD }}
  #     - name: Docker meta
  #       uses: docker/metadata-action@v5
  #       id: meta
  #       with:
  #         images: ${{ vars.AZURE_REGISTRY }}/sample-app
  #         flavor: latest=true
  #         tags: |
  #           type=semver,pattern={{version}}
  #     - name: Build and push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: sample-app/
  #         file: sample-app/Dockerfile
  #         push: ${{ github.ref_type == 'tag' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
