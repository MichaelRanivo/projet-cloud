name: CI 
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  build-sample-app:
    runs-on: ubuntu-20.04
    #need php8
    steps:
      - run: pwd
      - run: ls ../T-CLO-907-LYO_13
#       - cd sample-app/
#       - cat ${ENV} > .env
#       - composer install
#     artifacts:
#       paths:
#         - sample-app/

# test_sample-app:
#   stage: test
#   image: registry.infra.connectwork.fr/expressweb/devops/php8:main
#   script:
#     - cd sample-app/
#     - php artisan migrate:fresh
#     - php artisan db:seed
#     - vendor/bin/phpunit
#   needs:
#     - job: "build_sample-app"
#       artifacts: true

# name: GitHub Actions Demo
# run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v3
#       - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "🖥️ The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "🍏 This job's status is ${{ job.status }}."


# docker_php_sample-app:
#   stage: package
#   image: "quay.io/buildah/stable:v1.21.0"
#   variables:
#     BUILD_NAME: "sample-app"
#     DOCKER_PATH: ${CI_PROJECT_DIR}/server/images/Dockerfile
#     DOCKER_CONTEXT: ${CI_PROJECT_DIR}/
#     BUILD_VERSION: ${CI_COMMIT_REF_SLUG}
#     BUILD_REGISTRY: ${CI_REGISTRY_IMAGE}
#     FULL_IMAGE_NAME: ${BUILD_REGISTRY}/${BUILD_NAME}:${BUILD_VERSION}
#     DOCKER_OPTIONS: ""
#   script:
#     - buildah login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#     - buildah login -u "$CI_DEPENDENCY_PROXY_USER" -p "$CI_DEPENDENCY_PROXY_PASSWORD" $CI_DEPENDENCY_PROXY_SERVER
#     - buildah bud --pull ${DOCKER_OPTIONS} -t "$FULL_IMAGE_NAME" -f ${DOCKER_PATH} ${DOCKER_CONTEXT}
#     - buildah push $FULL_IMAGE_NAME
#   needs:
#     - job: "build_sample-app"
#       artifacts: true

# deploy-test:
#   stage: deploy
#   image:
#     name: line/kubectl-kustomize:1.23.6-4.5.4
#     entrypoint: [""]
#   variables:
#     KUBECONFIG: /tmp/kubeconfig
#     GIT_STRATEGY: fetch
#     GIT_SUBMODULE_STRATEGY: none
#     KUBE_CLUSTER: cw-hosting-dev
#     DEPLOY_ENV: dev
#     KUBE_NAMESPACE: epitech
#   before_script:
#     - if [ -z "${KUBECONFIG_DEV}" ]; then echo "The KUBECONFIG_DEV var is unset" && exit 1; else echo ${KUBECONFIG_DEV} | base64 -d > ${KUBECONFIG}; fi
#     - apk add --no-cache gettext libintl
#   script:
#     - kustomize build . | envsubst | kubectl diff -n ${KUBE_NAMESPACE} -f - || true
#     - kustomize build . | envsubst | kubectl apply -n ${KUBE_NAMESPACE} -f -
#   needs: ["docker_php_sample-app"]