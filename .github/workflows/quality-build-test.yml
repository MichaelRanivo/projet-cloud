name: CI Code Quality, Build and Unit test

run-name: ${{ github.actor }} is launching the Code Quality, the app Build and the Unit test ðŸš€

on:
  push:
    branches:
      - dev

jobs:
  sniff-code:
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP and composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer

      - name: Install PHPStan
        run: |
          cd sample-app/
          composer require --dev phpstan/phpstan

      - name: Scan the code
        run: |
          cd sample-app/
          vendor/bin/phpstan analyse .

  build-sample-app:
    runs-on: self-hosted
    needs: sniff-code
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up PHP and composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          tools: composer

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_APP_DEBUG: ${{ secrets.APP_DEBUG }}
          envkey_APP_ENV: local
          envkey_APP_KEY: ${{ secrets.APP_KEY }}
          envkey_APP_URL: ${{ secrets.APP_URL }}
          envkey_DB_CONNECTION: mysql
          envkey_DB_HOST: 127.0.0.1
          envkey_DB_PORT: 3306
          envkey_DB_DATABASE: laravel
          envkey_DB_USERNAME: dev
          envkey_DB_PASSWORD: sampleAdminDev
          directory: sample-app/
          file_name: .env
          fail_on_empty: false
          sort_keys: false

      - name: Update and install dependencies
        run: |
          cd sample-app/
          composer update --optimize-autoloader
          composer install --no-interaction --optimize-autoloader

      - name: Compresse the app
        run: |
          tar -czf app-builded.tar.gz sample-app/

      - name: Upload artefact of the app
        uses: actions/upload-artifact@v3
        with:
          name: app-builded.tar.gz
          path: app-builded.tar.gz

  test-sample-app:
    needs: build-sample-app
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.2
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: sampleAdmin
          MYSQL_DATABASE: laravel
          MYSQL_USER: dev
          MYSQL_PASSWORD: sampleAdminDev
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: test mysql
        run: |
          mysql -h localhost -u dev -p sampleAdminDev

      - name: Download the artefact of the app
        uses: actions/download-artifact@v3
        with:
          name: app-builded.tar.gz

      - name: Remove the sample-app directory
        run: rm -rf sample-app/

      - name: Unpack the artifact
        run: |
          mkdir sample-app/
          tar xzf app-builded.tar.gz

      - name: Migrate and seed the DB
        run: |
          cd sample-app/
          php artisan migrate --force
          php artisan db:seed --force

      - name: Execute tests via PHPUnit
        run: |
          cd sample-app/
          vendor/bin/phpunit tests/
